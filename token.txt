TYPE          :       int
VAR           	   :       a
OP	           :       [
INT       	   :       9
OP	           :       ]
OP	           :       ;
TYPE          :       int
VAR           	   :       s
OP	           :       [
INT       	   :       9
OP	           :       ]
OP	           :       ;
TYPE          :       int
VAR           	   :       i
OP	           :       ;
Token	           :       for
OP	           :       (
VAR           	   :       i
OP	           :       =
INT       	   :       0
OP	           :       ;
VAR           	   :       i
OP	           :       <
INT       	   :       9
OP	           :       ;
VAR           	   :       i
OP	           :       ++
OP	           :       )
VAR           	   :       a
OP	           :       [
VAR           	   :       i
OP	           :       ]
OP	           :       =
INT       	   :       9
OP	           :       -
VAR           	   :       i
OP	           :       ;
TYPE          :       int
VAR           	   :       p
OP	           :       =
INT       	   :       0
OP	           :       ;
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
INT       	   :       0
OP	           :       ;
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
INT       	   :       8
OP	           :       ;
TYPE          :       int
VAR           	   :       low
OP	           :       ;
TYPE          :       int
VAR           	   :       high
OP	           :       ;
TYPE          :       int
VAR           	   :       q
OP	           :       ;
Token      	   :       while
OP	           :       (
VAR           	   :       p
OP	           :       >
INT       	   :       0
OP	           :       )
OP	           :       {
VAR           	   :       high
OP	           :       =
VAR           	   :       s
OP	           :       [
OP	           :       --
VAR           	   :       p
OP	           :       ]
OP	           :       ;
VAR           	   :       low
OP	           :       =
VAR           	   :       s
OP	           :       [
OP	           :       --
VAR           	   :       p
OP	           :       ]
OP	           :       ;
Token        	   :       if
OP	           :       (
VAR           	   :       low
OP	           :       >
VAR           	   :       high
OP	           :       )
Token	           :       break
OP	           :       ;
TYPE          :       int
VAR           	   :       x
OP	           :       =
VAR           	   :       a
OP	           :       [
VAR           	   :       low
OP	           :       ]
OP	           :       ;
TYPE          :       int
VAR           	   :       k
OP	           :       =
VAR           	   :       low
OP	           :       ;
TYPE          :       int
VAR           	   :       j
OP	           :       =
VAR           	   :       high
OP	           :       +
INT       	   :       1
OP	           :       ;
TYPE          :       int
VAR           	   :       temp
OP	           :       ;
Token      	   :       while
OP	           :       (
VAR           	   :       i
OP	           :       <
VAR           	   :       j
OP	           :       )
OP	           :       {
Token      	   :       while
OP	           :       (
VAR           	   :       a
OP	           :       [
OP	           :       ++
VAR           	   :       i
OP	           :       ]
OP	           :       <
VAR           	   :       x
OP	           :       &&
VAR           	   :       i
OP	           :       <
VAR           	   :       high
OP	           :       )
OP	           :       ;
Token      	   :       while
OP	           :       (
VAR           	   :       a
OP	           :       [
OP	           :       --
VAR           	   :       j
OP	           :       ]
OP	           :       >
VAR           	   :       x
OP	           :       )
OP	           :       ;
Token        	   :       if
OP	           :       (
VAR           	   :       i
OP	           :       <
VAR           	   :       j
OP	           :       )
OP	           :       {
VAR           	   :       temp
OP	           :       =
VAR           	   :       a
OP	           :       [
VAR           	   :       i
OP	           :       ]
OP	           :       ;
VAR           	   :       a
OP	           :       [
VAR           	   :       i
OP	           :       ]
OP	           :       =
VAR           	   :       a
OP	           :       [
VAR           	   :       j
OP	           :       ]
OP	           :       ;
VAR           	   :       a
OP	           :       [
VAR           	   :       j
OP	           :       ]
OP	           :       =
VAR           	   :       temp
OP	           :       ;
OP	           :       }
OP	           :       }
VAR           	   :       a
OP	           :       [
VAR           	   :       low
OP	           :       ]
OP	           :       =
VAR           	   :       a
OP	           :       [
VAR           	   :       j
OP	           :       ]
OP	           :       ;
VAR           	   :       a
OP	           :       [
VAR           	   :       j
OP	           :       ]
OP	           :       =
VAR           	   :       x
OP	           :       ;
VAR           	   :       q
OP	           :       =
VAR           	   :       j
OP	           :       ;
Token        	   :       if
OP	           :       (
OP	           :       (
VAR           	   :       q
OP	           :       -
VAR           	   :       low
OP	           :       )
OP	           :       >
OP	           :       (
VAR           	   :       high
OP	           :       -
VAR           	   :       q
OP	           :       )
OP	           :       )
OP	           :       {
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       low
OP	           :       ;
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       q
OP	           :       -
INT       	   :       1
OP	           :       ;
Token        	   :       if
OP	           :       (
VAR           	   :       high
OP	           :       >
VAR           	   :       q
OP	           :       )
OP	           :       {
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       q
OP	           :       +
INT       	   :       1
OP	           :       ;
VAR           	   :       a
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       high
OP	           :       ;
OP	           :       }
OP	           :       }
Token       	   :       else
OP	           :       {
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       q
OP	           :       +
INT       	   :       1
OP	           :       ;
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       high
OP	           :       ;
Token        	   :       if
OP	           :       (
VAR           	   :       q
OP	           :       >
VAR           	   :       low
OP	           :       )
OP	           :       {
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       low
OP	           :       ;
VAR           	   :       s
OP	           :       [
VAR           	   :       p
OP	           :       ++
OP	           :       ]
OP	           :       =
VAR           	   :       q
OP	           :       -
INT       	   :       1
OP	           :       ;
OP	           :       }
OP	           :       }
OP	           :       }
